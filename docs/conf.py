#!/usr/bin/env python
#
# pyglotaran_extras documentation build configuration file, created by
# sphinx-quickstart on Fri Jun  9 13:47:02 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another
# directory, add these directories to sys.path here. If the directory is
# relative to the documentation root, use os.path.abspath to make it
# absolute, like shown here.
#
from pathlib import Path
import pyglotaran_extras

HERE = Path(__file__).parent

pyglotaran_extras.create_config_schema(HERE/"_static")

# -- General configuration ---------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "myst_nb",
    'sphinxcontrib.mermaid',
    "sphinx_copybutton",
    "pydata_sphinx_theme",
]

myst_fence_as_directive = ["mermaid"]


autoclass_content = "both"
autosummary_generate = True
add_module_names = False
autodoc_member_order = "bysource"

autodoc_pydantic_model_show_config_summary=False
autodoc_pydantic_model_show_validator_summary=False


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = {'.rst': 'restructuredtext', '.md': 'restructuredtext'}
# source_suffix = '.rst'
linkcheck_ignore = [
    r"https://github\.com/glotaran/pyglotaran-extras/actions",
    r"https://github\.com/glotaran/pyglotaran-extras/workflows/Tests/badge\.svg",
]

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "pyglotaran_extras"
copyright = "2021, Joris Snellenburg"
author = "Joris Snellenburg"

# The version info for the project you're documenting, acts as replacement
# for |version| and |release|, also used in various other places throughout
# the built documents.
#
# The short X.Y version.
version = pyglotaran_extras.__version__
# The full version, including alpha/beta/rc tags.
release = pyglotaran_extras.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output -------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
image_gh_raw_base = "https://raw.githubusercontent.com/glotaran/pyglotaran/eb8a1ea0e4e0e499c829766a3298e79ea4975f58/docs/source/images"
html_theme = "pydata_sphinx_theme"
html_logo =f"{image_gh_raw_base}/pyglotaran_logo_light_theme.svg"
html_favicon = f"{image_gh_raw_base}/pyglotaran_favicon_transparent.svg"
html_theme_options = {
    "pygments_dark_style": "monokai",
    "icon_links": [
        {
            "name": "GitHub",
            "url": "https://github.com/glotaran/pyglotaran-extras",
            "icon": "fa-brands fa-square-github",
            "type": "fontawesome",
        }
    ],
    "logo": {
        "text": "Pyglotaran-Extras",
        "image_dark": f"{image_gh_raw_base}/pyglotaran_logo_dark_theme.svg",
    },

}
# Hide empty sidebars
# Ref.: https://github.com/pydata/pydata-sphinx-theme/issues/1662#issuecomment-1913672649
html_sidebars = {
    'installation': [],
    'usage': [],
    'contributing': [],
    'changelog': [],
    'config/project/subproject/config_docs': [],
}

# Theme options are theme-specific and customize the look and feel of a
# theme further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


# -- Options for HTMLHelp output ---------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "pyglotaran_extrasdoc"


# -- Options for LaTeX output ------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass
# [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "pyglotaran_extras.tex",
        "pyglotaran_extras Documentation",
        "Joris Snellenburg",
        "manual",
    ),
]


# -- Options for manual page output ------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "pyglotaran_extras", "pyglotaran_extras Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "pyglotaran_extras",
        "pyglotaran_extras Documentation",
        author,
        "pyglotaran_extras",
        "One line description of project.",
        "Miscellaneous",
    ),
]
